name: Build, Push, and Deploy to EC2 with OIDC1

on:
  push:
    branches:
      - master

permissions:
  id-token: write
  contents: read

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    env:
      REGISTRY: docker.io

    steps:
      - name: Checkout code
        uses: actions/checkout@v3



      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Docker Hub
        run: echo "${{ secrets.REGISTRY_TOKEN }}" | docker login ${{ env.REGISTRY }} -u ${{ secrets.REGISTRY_USERNAME }} --password-stdin

      - name: Build Docker image
        run: |
          docker build -f .github/workflows/Dockerfile \
            -t ${{ env.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/${{ secrets.IMAGE_NAME }}:latest \
            -t ${{ env.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }} .

      - name: Push Docker image
        run: |
          docker push ${{ env.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/${{ secrets.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }}

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ env.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/${{ secrets.IMAGE_NAME }}:latest
            docker stop nginx-container || true
            docker rm nginx-container || true
            docker run -d --name nginx-container -p 80:80 ${{ env.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/${{ secrets.IMAGE_NAME }}:latest
